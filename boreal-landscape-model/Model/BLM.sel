Seles Model
Time Units: Years Century 100 300


External Variables:

   // Folders
   $cats$ = "..\gisData\cats"
   $inputFiles$ = "..\inputFiles"

   // Sub-model file names: used to include "add on" compoents
   $SBWSubModel$ = SubModel_SBW
   $PatchMetricsSubModel$ = SubModel_0

   // Landscape event file names
   $FireEventName$ = FireFBP  // SimpleFire or FireFBP

   // Input file names
   $SppSuccessionFile$ = SppSuccession
   $SymmetricIncreaseFile$ = SymmetricIncrease
   $ContagionFile$ = "Contagion"

   $AACFile$ = "AAC"

Landscape Events:
   // Succession events 
   Succession.lse DEBUG

   // Inventory (planning) events
   GrowingStock.lse DEBUG
   OperatingAreas.lse DEBUG
   IdMaxBlockSize.lse DEBUG // Mar 2010: new event o identify max potential block size
   SetMaxBlockSize.lse DEBUG // Mar 2010: new event to set max potential block size

   // Logging and roading events (management activities)
   Logging.lse debug //_Andrew.lse DEBUG
   UpdateRoads.lse DEBUG
   UpdateDist2Rds.lse DEBUG

   // Natural disturbance events
   $FireEventName$.lse DEBUG

   // Reporting events
   ReportResults.lse DEBUG


// ###########################################
// ## Legends: defined sets of constants
// ###########################################
Legends:
   SppLegend = "$cats$\treeSpp"
   SppCodes = "$inputFiles$\Succession\SppCodes.txt"
   LandUnitLegend = "$cats$\landunit"
   SuccGroupLegend = "$cats$\serieEvolGrouping"
   SerieEvolLegend = "$cats$\SerieEvol"
   StandTypeLegend = "..\cats\StandType"

   MgmtZoneLegend = "$cats$\ManagementZone"
   TreatmentTypes = {1:Unavailable, 2:GreenBlock, 3:SalvageBlock}
   GSCategories = {0:lTotal, 1:lAvailable, 2:lMHA, 3: lProtected, 4:lDist, 5:lAdjGreenup, 6:lACReserve, 7:lMosaicReserve, 8:lStripCutReserve }

   RoadTypeLegend = "$inputFiles$\Roads\RoadType"
 
   // For indexing the road segment table. Note: SegmentId is the index
   RoadSegmentTblCols = {0:rRoadType, 1:rState, 2:rLength, 3:rNextSegmentId, 4:rStartLoc, 5:rEndLoc, 6:rStartRow, 7:rStartCol, 8:rEndRow, 9:rEndCol }

   FBPFuelsLegend = "..\cats\FBPFuels"


// ###########################################
// ## Rasters that do not change within the model (static)
// ###########################################
Spatial Constants:
   ///////// General /////////////////////////
   StudyArea = LandUnit
   LandUnit
   Ecoregion
   ManagementZone

   ///////// Succession /////////////////////////
   SuccessionGroup

   ///////// Roading /////////////////////////
   RoadSegmentId
   RoadBackbone
   NearestRoadSegment
   DistFromExit


// ###########################################
// ## Constants and parameters needed to define bounds for spatial variables and arrays
// ###########################################
Global Constants:

   ///////// General /////////////////////////
   CellWidth = CELL WIDTH(LandUnit)
   HaPerCell = (CellWidth^2) / 10000
   NumManagementZones = ROWS(MgmtZoneLegend) - 1

   ///////// Succession /////////////////////////
   MaxStandAge = 300
   NumSppCodes = ROWS(SppLegend) //ROWS(SppLookup)
   NumSppLeadCodes = ROWS(SppCodes)

   ///////// Inventory /////////////////////////
   AUInfo = "$inputFiles$\Volume\AUInfo.txt"
   rMHA = 0
   rAgeAt7m = 1
   rVolAtMHA = 2
   MaxAU = ROWS(AUInfo) - 1

   VolScale = 100

   MaxVolPerHa = 710
   MinYieldSalvagePerHa = 25
   NumGSCategories = ROWS(GSCategories)
   MaxActiveOAs = 10000

   NumAC = 6
   ACSize = 20
   NumAgeClasses = (MaxStandAge / ACSize) + 1

   ///////// Logging /////////////////////////
   PotBlockSizeBound = 30000 // AF had set at 10000 Mar 2010: upper bound on max potential block size (to limit max. value in raster; increase if needed)

   ///////// Roading /////////////////////////
   NumRoadSegments = MAX(RoadSegmentId) //ROWS(RoadSegmentTable) - 1
   NumRoadTypes = ROWS(RoadTypeLegend) - 1
   MaxDist2ActiveRds = MAX(initialDist2ActiveRds)

   ///////// Disturbance /////////////////////////
   MaxTimeSinceDisturbance = 400

   // Number of disturbance types
   NumDisturbanceAgents = 3  // don't count logging (why?)
   rLogged = 0
   rFire = 1
   rSBW1 = 2
   rSBW2 = 3
   rSBW3 = 4


// ###########################################
// ## Dynamic rasters
// ###########################################
// Note: bounds are only needed if they differ from the initial state or if there is no initial state
Spatial Variables:
   ///////// General /////////////////////////
   ManagementZone[NumManagementZones]

   ///////// Succession /////////////////////////
   StandAge[-1, MaxStandAge] <- initialAge
   PreDisturbanceAge[-1, MaxStandAge] <- initialAge

   Species[NumSppCodes] <- initialSpp 
   PreDisturbanceSpp[NumSppCodes] <- initialSpp

   NextTransAge[MaxStandAge] // For trajectories (main cohort)
   NextTransYr[300]
   TransTrajectory[-1]
   NumTrans[NumAC]
   PctCohort2[100] <- 0 // Default: 0 (no 2nd cohort)

   StandType[3]


   ///////// Inventory /////////////////////////
   AU[MaxAU] <- initialAU
   VolPerHa[VolScale * MaxVolPerHa + 1]
   SalvageableVolume[MaxVolPerHa * HaPerCell + 1]
   PotentialTreatmentType[4]
   OperatingArea[MaxActiveOAs]

   ///////// Logging /////////////////////////
   Logged[MaxTimeSinceDisturbance]
   MaxPotBlockSize[PotBlockSizeBound] // Mar 2010: layer to record maximum potential block size for each cell
   BlockId[100]

   ///////// Roading /////////////////////////
   RoadType[-1, NumRoadTypes] <- initialRoadType
   Dist2ActiveRds[-1, MaxDist2ActiveRds] <- initialDist2ActiveRds
   NearestRoadLoc[NumCells] <- initialNearestRoadLoc
   Visited[NumRoadSegments] // OR? [3]

   ///////// Disturbance /////////////////////////
   LastDisturbance[NumDisturbanceAgents+1]

   // Fire
   FBPFuels[11] // ? CAN THIS BE MOVED TO A COMPONENT
   Burnt[MaxTimeSinceDisturbance]




// ###########################################
// ## General constant values and tables
// ###########################################
Global Constants:
   ///////// General /////////////////////////
   NumLandUnits = ROWS(LandUnitLegend)

   ///////// Succession /////////////////////////

   // Probability of a species being leading or secondary in ITG (row: spp, col: BEC) and
   // compatible combinations of leading and secondary (row: lead; col: secondary)
   pTreeSpp = "$inputFiles$\Succession\$SppSuccessionFile$.txt"  // original
   SppTranslate = 8
   NumSuccRows = ROWS(pTreeSpp)
   NumSuccGrps = MAX(SuccessionGroup) + 1

   // Increase in in and out transitions in each period by ITG, Bec
   pSymmetricIncrease = "$inputFiles$\Succession\$SymmetricIncreaseFile$.txt"

   // Contagion Table
   SppContagion = "$inputFiles$\Succession\$ContagionFile$.txt"

   // Lookup a leading (col 0) or secondary (col 1) species given an ITG (row)
   SppLookup = "$inputFiles$\Succession\SppLookup.txt"
   SppCombine = "$inputFiles$\Succession\SppCombine.txt" 

   // Specify columns from "SppLookup.txt" (should be a legend)
   rLead = 0
   rSecondary = 1
   rStandType = 2
   rSppSoilClass = 4
   rFuelAge0 = 5
   rFuelAge1 = 6
   rFuelAge2 = 7
   rFuelPostSBW = 8
   rHostType = 9
   postSBWNonHost = 10
   postSBWHost = 11
   pctHosts = 12
   rHostLeads = 13
   rHostSeconds = 14
   ///////// Inventory /////////////////////////

   // Volume and height tables
   VolTable = "$inputFiles$\Volume\Volume.txt"
   VolCols = COLS(VolTable)
   MaxDecade = VolCols - 1

   MAITable = "$inputFiles$\Volume\MAI.txt"

   // for age-class targeted harvest
   AgeClassTargets = "$inputFiles$\AgeClassTargets.txt"

   // AC Target Types (ways to achieving Target AC)
   rACStrictLocal = 0
   rACStrictReserveOlder = 1
   rACProbabilistic = 2

   // salvage volume categories 
   Salvageable = 0
   Lost = 1

   ///////// Logging /////////////////////////
   AAC = $inputFiles$\$AACFile$.txt
   MaxAACDecade = COLS(AAC) - 1

   BlockClassSize = 50 //20 // for 20-year classes, starting at 0-19, then 20-39,...  
   NumBlockClasses = 200 // 50 number of classes that you want to output


   ///////// Roading /////////////////////////

   ///////// Disturbance /////////////////////////
   ///////////////////////////
   // Disturbance constants
   ///////////////////////////

   // LandUnit in columns, parameters in rows
   LandUnitInfo = "$inputFiles$\landUnitInfo.txt"
   rFireReturnInterval = 0

   // Used in Fire
   FuelConstants = "$inputFiles$\Fire\FuelConstants.txt"
   NumFuelProbs = ROWS(FBPFuelsLegend)

   rTotalDisturbed = 0
   rForestDisturbed = 1

   // For fire model types: simple size (or area) based empirical or duration based
   rSizeBasedFire = 0
   rDurationBasedFire = 1
  


Global Variables:
   // ###########################################
   // ## Parameters: global variables input to the model (not changed within the model)
   // ##
   // ## NOTE: To change for a specic experiment, change in the scenario after loading VLM.sel
   // ##       DO NOT CHANGE THE DEFAULT VALUES HERE UNLESS A PERMANENT CHANGE IS DESIRED
   // ###########################################

   ///////// General /////////////////////////
   BaseTimestep = 5        // Base Time step (in years)
   ReportingInterval  = -1 // frequency for scheduled output (in years)

   // Changing mgmt zone should be done OUTSIDE the model in a scenario
   SetManagementZone = 0,0,0
   SetManagementZoneSched = 0,0,0


   ///////// Succession /////////////////////////
   ApplySppSuccession = TRUE  // Whether to apply species succession or leave species static
   pTrajContagion = 0.9        // Probability of selecting trajectory from neighbouring cells
   SeralTransitionYears = 20   // Number of years to fully make a seral transition

   // For Decay info
   SalvageDecayTime = 2
   SalvageDecayDelay = 0

   ///////// Inventory /////////////////////////
   ACType = rACStrictLocal

   IMGrowthIncreaseFactor = 2 // Increase growth in IM by this... (in lieu of having volume tables)
   MHA_Override = 0 // RDefault: 0 to applhy AU-specific MHA. If > 0, then use as MHA

   // Whether to use hard or soft adjacency
   // Prob. of logging in an adjacency buffer (set to zero for hard adjacency)
   pLogInBuffer = 0.01
   GreenupYears = 15 // Number of years after harvest to apply adjacency

   StripCutMinReentryInterval = 25 // in years
   StripCutWidth = 50 // in metres (must be a multiple of cell width)

   MinNoEffectDist2Rd = 500  // Range between start of deline in prob.
   MaxDist2Road = 10000000  // RT changed from 2000 on Andrew's advice

   // For operating areas (clustered harvest)
   OASizeHa = 25000  // size in ha
   OATimespan = 20   // years to keep active
   NumActiveOAs = 5  // number of keep active


   ///////// Logging /////////////////////////
   AACMult = 1 // Multiply AAC by this...
   AreaBasedHarvest = TRUE      // Whether this is volume based or area based harvesting
   PercentBasedHarvest = FALSE   // Whether the AAC is a value or a percent

   BlockSizeMin = 5
   BlockSizeMax = 1000


   ///////// Roading /////////////////////////
   // Road segment info
   RoadSegmentTable = "$inputFiles$\Roads\RoadSegmentList.txt"


   ///////// Disturbance /////////////////////////
   // For disturbance level modification. Multiply disturbance parameters by these values. Default: keep same each run
   FireModelType = rSizeBasedFire // controls whether the model uses simple size-based or duration-based fires

   ApplyFireFuelEffect = TRUE // If TRUE, use estimated fuel types to affect initiation and spread
   ApplyFireLandUnitEffect = FALSE // If TRUE, pick initiation points based on MFRI for the land unit

   FireMeanNumPerDecade = 10

   FireMeanSize = 2000  // ha. Only for size-based fires (FireModelType = rSizeBasedFire)
   FireMaxSize = 20000  // ha. Only for size-based fires (FireModelType = rSizeBasedFire)

   FireMeanDuration = 200 // days/steps. . Only for duration-based fires (FireModelType = rDurationBasedFire)
   FireMaxDuration = 500 // maximum number of days/steps (max radius)

   FireProbUnburned = 0.02, 0.95 // probability of starting an unburned island (1st value) or continuing an unburned island (2nd)
   MeanISI = 5
   MinISI = 1
   MaxISI = 40


   // ###########################################
   // ## Tracking: global variables used by the model for
   // ## communicating between events or output
   // ##
   // ## For tracking info within an event, define a LOCAL variable in the event
   // ###########################################

   ///////// General /////////////////////////
   ForestSize = 0
   ForestSizeByZone[NumManagementZones+1] = 0
   LUSize[NumLandUnits] = 0


   ///////// Succession /////////////////////////
   SGSize[NumSuccGrps] = 0

   NumSppTrans[NumSppLeadCodes,NumSppLeadCodes] = 0

   SpeciesByLU[NumSppCodes,NumLandUnits] = 0
   SpeciesLeadByLU[NumSppLeadCodes,NumLandUnits] = 0
   SpeciesBySG[NumSppCodes,NumSuccGrps] = 0
   SpeciesLeadBySG[NumSppLeadCodes,NumSuccGrps] = 0
   StandTypeByLU[4,NumLandUnits+1] = 0


   ///////// Inventory /////////////////////////
   // Amount of harvest reduction set by each natural disturbance agent
   // NOTE: Be careful not to mix area and volume based approaches
   NumCellsAvailable = 0
   GrowingStockByZone[NumManagementZones+1] = 0

   SizeByClass[NumAgeClasses] = 0
   SizeByYearZone[MaxStandAge+1,NumManagementZones+1] = 0
   SizeByClassZone[NumAgeClasses,NumManagementZones+1] = 0

   // For AC zone
   SurplusByYear[MaxStandAge+1] = 0
   SurplusByAC[NumAgeClasses+1] = 0

   ///////// Logging /////////////////////////
   AnnualHarvestTarget = 0 OFF
   VolHarvestedForYear[2] = 0  // Green and salvaged separated
   AreaHarvestedForYear[2] = 0 // Green and salvaged separated
   AreaAccessedForYear = 0
   SumOfAgeForYear[3] = 0      // Green and salvaged (prev age/curr age) separated

   AnnualHarvestTargetByZone[NumManagementZones+1] = 0
   VolumeHarvestedByZone[NumManagementZones+1] = 0
   AreaHarvestedByZone[NumManagementZones+1] = 0
   AreaAccessedByZone[NumManagementZones+1] = 0
   AgeHarvestedByZone[NumManagementZones+1] = 0

   AreaHarvestedByStandType[4] = 0
   HarvestProfile[NumSppCodes] = 0   // Harvest profile

   BlockSizeDist[NumBlockClasses, NumLandUnits] = 0
   BlockSizeArea[NumBlockClasses, NumLandUnits] = 0


   ///////// Roading /////////////////////////
   // For tracking roads built
   KmRoadsBuilt[NumRoadTypes+1] = 0
   KmRoadsVisited[NumRoadTypes+1] = 0
   KmPerM3Hauled[NumManagementZones+1] = 0


   ///////// Disturbance /////////////////////////
   VolDisturbed[NumDisturbanceAgents+1] = 0
   AreaDisturbed[NumDisturbanceAgents+1,3] = 0
   NumDisturbPatches[NumDisturbanceAgents+1] = 0

   VolumeBurnedByZone[NumManagementZones+1] = 0
   AreaBurnedByZone[NumManagementZones+1] = 0
   AreaBurnedByLandUnit[NumLandUnits+1] = 0
   SelectedAreaDisturbed[NumDisturbanceAgents+1] = 0
   NumSelectedDisturbPatches[NumDisturbanceAgents+1] = 0

   VolumeUnsalvaged[NumDisturbanceAgents+1, 2] = 0   


// ###########################################
// ## Add-on components are defined by including appropriate sub-models
//SubModel: SubModel_0.sel
SubModel: $SBWSubModel$.sel
SubModel: $PatchMetricsSubModel$.sel


Output Frequency: 10 // Number of time steps between screen refreshes

// Used to schedule spatial time series outputs
Output Model Frequency:
   Burnt Freq: ReportingInterval Directory: "cell" Type: GRASS COMPRESSED relative
//   Species Freq: ReportingInterval Directory: "cell" Type: grass compressed relative
   Logged Freq: ReportingInterval Directory: "cell" Type: GRASS COMPRESSED relative
//   MaxPotBlockSize Freq: ReportingInterval Directory: "cell" Type: GRASS COMPRESSED relative

   // Needed for carbon analysis
   StandAge Freq: ReportingInterval Directory: "cell" Type: GRASS COMPRESSED relative
   AU Freq: ReportingInterval Directory: "cell" Type: GRASS COMPRESSED relative
   LastDisturbance Freq: ReportingInterval Directory: "cell" Type: GRASS COMPRESSED relative

