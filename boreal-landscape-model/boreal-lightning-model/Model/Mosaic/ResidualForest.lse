// Identify residial forest patches
LSEVENT: ResidualForest

DEFINITIONS
   GLOBAL CONSTANT: HaPerCell, CellWidth, rMosaic
   LAYER: StudyArea, StandAge, AU, UTR, StandType, ManagementZone

   LAYER: ResidualForest, Visited
   GLOBAL CONSTANT: Reserved, NotReserved, InsufficientSize


   GLOBAL CONSTANT: AUInfo[], rAgeAt7m, rVolAtMHA, NumUTRs
   GLOBAL VARIABLE: residualForestWidthThreshold, BaseTimestep

   GLOBAL VARIABLE: minAreaInCells

   GLOBAL VARIABLE: UTRSize[], ResidualHaByUTR[], ReserveHaByUTR[], TargetsByUTR[] // overall, conif, mixed, decid
   GLOBAL CONSTANT: Coniferous, Mixed, Deciduous

   CELL VARIABLE: rate
   CLUSTER VARIABLE: numActiveCells, currPatchSize, lowerRow, upperRow, leftCol, rightCol
   EVENT VARIABLE: eventType

   CONSTANT: finderEvent = 1
   CONSTANT: eraserEvent = 2
   CONSTANT: recruiterEvent = 3
   CONSTANT: recruiterEvent2 = 4

   CONSTANT: MaxSize = 5000
ENDDEF

INITIALSTATE
   pi = 3.141592654
   minAreaInCells = pi * ((residualForestWidthThreshold/CellWidth)^2)

   OVER REGION WHOLE MAP
      DECISION (StudyArea > 0) AND (StandType > 0) AND (ManagementZone EQ rMosaic)
      UTRSize[UTR,0] = UTRSize[UTR,0] + HaPerCell
      UTRSize[UTR,StandType] = UTRSize[UTR,StandType] + HaPerCell
   ENDFN

   OVER INDEX SEQUENCE(1,NumUTRs)
      utr = Index
      TargetsByUTR[utr,Coniferous] = ROUND(UTRSize[utr,Coniferous] * 0.2)
      TargetsByUTR[utr,Deciduous] = ROUND(UTRSize[utr,Deciduous] * 0.2)
      TargetsByUTR[utr,Mixed] = ROUND(UTRSize[utr,Mixed] * 0.2)
      TargetsByUTR[utr,0] = ROUND(UTRSize[utr,0] * 0.5)
      TargetsByUTR[utr,4] = TargetsByUTR[utr,0] - TargetsByUTR[utr,Coniferous] - TargetsByUTR[utr,Deciduous] - TargetsByUTR[utr,Mixed]
/*DISPLAY RECORD
UTR: Index
target: TargetsByUTR[Index,0]
target2: TargetsByUTR[Index,4]
targetSw: TargetsByUTR[Index,Coniferous]
targetHw: TargetsByUTR[Index,Deciduous]
targetMw: TargetsByUTR[Index,Mixed]
size: UTRSize[Index,0]
sizeSw: UTRSize[Index,Coniferous]
sizeHw: UTRSize[Index,Deciduous]
sizeMw: UTRSize[Index,Mixed]
ENDFN
*/
   ENDFN

   INITIALSTATE = 4
   eventType = EventId
ENDIS

RETURNTIME
   // At end of erasing event
   IF (Time > 0) AND (eventType EQ eraserEvent)
      OVER REGION WHOLE MAP
         DECISION (StudyArea > 0) AND (ResidualForest EQ NotReserved)
         ResidualHaByUTR[UTR,0] = ResidualHaByUTR[UTR,0] + HaPerCell
      ENDFN
   ENDFN
/*
IF (Time > 0) AND (eventType EQ recruiterEvent)
OVER INDEX SEQUENCE(1,NumUTRs)
DISPLAY RECORD
UTR: Index
eventType :eventType 
pRes: ReserveHaByUTR[Index,0]/UTRSize[Index,0]
pResSw: ReserveHaByUTR[Index,Coniferous]/UTRSize[Index,Coniferous]
pResHw: ReserveHaByUTR[Index,Deciduous]/UTRSize[Index,Deciduous]
pResMw: ReserveHaByUTR[Index,Mixed]/UTRSize[Index,Mixed]
size: UTRSize[Index,0]
sizeSw: UTRSize[Index,Coniferous]
sizeHw: UTRSize[Index,Deciduous]
sizeMw: UTRSize[Index,Mixed]
ENDFN
ENDFN
ENDFN
IF (Time > 0) AND (eventType EQ recruiterEvent2)
OVER INDEX SEQUENCE(1,NumUTRs)
DISPLAY RECORD
UTR: Index
eventType :eventType 
pRes: ReserveHaByUTR[Index,0]/UTRSize[Index,0]
pResSw: ReserveHaByUTR[Index,Coniferous]/UTRSize[Index,Coniferous]
pResHw: ReserveHaByUTR[Index,Deciduous]/UTRSize[Index,Deciduous]
pResMw: ReserveHaByUTR[Index,Mixed]/UTRSize[Index,Mixed]
size: UTRSize[Index,0]
sizeSw: UTRSize[Index,Coniferous]
sizeHw: UTRSize[Index,Deciduous]
sizeMw: UTRSize[Index,Mixed]
ENDFN
ENDFN
ENDFN
*/

   RETURNTIME = IF (Time EQ 0) THEN eventType/100000 ELSE BaseTimestep //MAX(10, BaseTimestep)

   IF eventType EQ finderEvent
      OVER INDEX SEQUENCE(1, NumUTRs)
         ResidualHaByUTR[Index,0] = 0
         ResidualHaByUTR[Index,Coniferous] = 0
         ResidualHaByUTR[Index,Mixed] = 0
         ResidualHaByUTR[Index,Deciduous] = 0

         ReserveHaByUTR[Index,0] = 0
         ReserveHaByUTR[Index,Coniferous] = 0
         ReserveHaByUTR[Index,Mixed] = 0
         ReserveHaByUTR[Index,Deciduous] = 0
         ReserveHaByUTR[Index,4] = 0
      ENDFN

      Visited = 0

      // Identify residual "cells"
      ResidualForest = IF (StandAge > AUInfo[AU,rAgeAt7m]) AND (AUInfo[AU,rVolAtMHA] > 50) THEN NotReserved
                       ELSE 0
   ENDFN
ENDRT

EVENTLOCATION
   REGION WHOLE MAP
      DECISION (ManagementZone EQ rMosaic)
ENDEL


PROBINIT RANDOM
   PROBINIT = CLASSIFY(eventType)
                 finderEvent: (ResidualForest EQ NotReserved) AND (Visited EQ 0)
                 eraserEvent: Visited EQ 2
                 recruiterEvent: (ResidualForest EQ NotReserved) * (Visited NEQ 3) * CLAMP((150 - StandAge),1,150)
                 recruiterEvent2: (ResidualForest EQ NotReserved) * (Visited NEQ 3) * (ReserveHaByUTR[UTR,0] < TargetsByUTR[UTR,0]) * CLAMP((150 - StandAge),1,150)
              ENDFN

   numActiveCells = 0
   currPatchSize = 0

   // Track bounding box
   lowerRow = ROW(Location)
   upperRow = lowerRow
   leftCol = COL(Location)
   rightCol = leftCol

   rate = IF eventType <= eraserEvent THEN -1
          ELSE CLAMP(-1 * (150 - StandAge)/10, -15,-1) //UNIFORM(-10,-1)
ENDPI


TRANSITIONS
   TRANSITIONS = CLASSIFY(eventType)
                    finderEvent: (Visited EQ 0) AND (ResidualForest EQ NotReserved)
                    eraserEvent: ResidualForest EQ NotReserved
                    recruiterEvent: AND
                                       (ResidualForest EQ NotReserved) 
                                       (Visited NEQ 3)
                                       CLASSIFY(StandType)
                                          Coniferous: (ReserveHaByUTR[UTR,Coniferous] < TargetsByUTR[UTR,Coniferous]) OR (ReserveHaByUTR[UTR,4] < TargetsByUTR[UTR,4])
                                          Mixed: (ReserveHaByUTR[UTR,Mixed] < TargetsByUTR[UTR,Mixed]) OR (ReserveHaByUTR[UTR,4] < TargetsByUTR[UTR,4])
                                          Deciduous: (ReserveHaByUTR[UTR,Deciduous] < TargetsByUTR[UTR,Deciduous]) OR (ReserveHaByUTR[UTR,4] < TargetsByUTR[UTR,4])
                                       ENDFN
                                    ENDFN
                    recruiterEvent2: (ResidualForest EQ NotReserved) AND (Visited NEQ 3) AND (ReserveHaByUTR[UTR,0] < TargetsByUTR[UTR,0])
                 ENDFN

   IF eventType EQ finderEvent
      Visited = 1

      // Track bounding box
      row = ROW(Location)
      IF row < lowerRow
         lowerRow = row
      ELSE IF row > upperRow
         upperRow = row
      ENDFN

      col = COL(Location)
      IF col < leftCol
         leftCol = col
      ELSE IF col > rightCol
         rightCol = col
      ENDFN
   ELSE IF eventType EQ eraserEvent
      ResidualForest = InsufficientSize
   ELSE
      Visited = 3
      ResidualForest = Reserved
      ReserveHaByUTR[UTR,0] = ReserveHaByUTR[UTR,0] + HaPerCell
      IF ReserveHaByUTR[UTR,StandType] >= TargetsByUTR[UTR,StandType]
         ReserveHaByUTR[UTR,4] = ReserveHaByUTR[UTR,4] + HaPerCell
      ENDFN
     ReserveHaByUTR[UTR,StandType] = ReserveHaByUTR[UTR,StandType] + HaPerCell
   ENDFN

   currPatchSize = currPatchSize + 1
   numActiveCells = numActiveCells + 1
ENDTR

SPREADLOCATION
   REGION CENTRED(1, 1.5, EUCLIDEAN)
      DECISION CLASSIFY(eventType)
                  finderEvent:(ManagementZone EQ rMosaic) AND (Visited EQ 0) AND (ResidualForest EQ NotReserved)
                  eraserEvent: (ManagementZone EQ rMosaic) AND (ResidualForest EQ NotReserved)
                  recruiterEvent: (ManagementZone EQ rMosaic) AND (ResidualForest EQ NotReserved) AND (Visited NEQ 3) AND (currPatchSize < MaxSize)
                  recruiterEvent2: (ManagementZone EQ rMosaic) AND (ResidualForest EQ NotReserved) AND (Visited NEQ 3) AND (currPatchSize < MaxSize)
               ENDFN
ENDSL

SPREADTIMESTEP
   SPREADTIMESTEP = rate

   // If numActiveCells becomes 0, then this patch is done
   numActiveCells = numActiveCells - 1

   IF (eventType EQ finderEvent) AND (numActiveCells EQ 0)
      // Test if patch meets requirements
      minWidth = MIN(upperRow - lowerRow, rightCol - leftCol) * CellWidth

      IF (minWidth < residualForestWidthThreshold) OR (currPatchSize < minAreaInCells)
         Visited = 2
      ENDFN
   ENDFN
ENDST

SPREADPROB
   SPREADPROB = 1
//   rate = CLAMP((SOURCE rate) + UNIFORM(-1,1), -1, -10)
   rate = IF eventType <= eraserEvent THEN -1
          ELSE CLAMP(-1 * (150 - StandAge)/10, -15,-1) //UNIFORM(-10,-1)
ENDSP
