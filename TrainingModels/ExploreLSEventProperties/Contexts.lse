LSEVENT: Contexts

// ------------------  DEFINITIONS  --------------------------------
// The Definitions sections is used to declare variables used in the
// landscape event.  This includes any layers, global variables, and
// global constants from the external model state-space that are
// referenced explicitly. It also contains internal variables defined
// for the dynamic hierarchy (event, cluster and cell variables) as
// well as output variables.
// -----------------------------------------------------------------
DEFINITIONS
   LAYER: EventLocation, InitLoc, OccurredLoc, RecipientLoc, SpreadLoc
   GLOBAL VARIABLE: nextClusterId, nextCellId
   GLOBAL CONSTANT: MaxInstances
   GLOBAL CONSTANT: ContextLegend[], Preliminary, Consequent


   GLOBAL VARIABLE: numActiveEvents, totalActiveClusters, totalActiveCells
   EVENT VARIABLE: numActiveClusters
   CLUSTER VARIABLE: clusterId, numActiveCells
   CELL VARIABLE: cellId
ENDDEF


// ------------------  INITIAL STATE ---------------------------------
// The InitialState property specifies the number of event instances
// to create at the start of a simulation. Except in special cases, this
// should be one.
// ------------------------------------------------------------------
INITIALSTATE
   // Preliminary expressions are evaluated globally at simulation startup 
   numActiveEvents = 0
   totalActiveClusters = 0
   totalActiveCells = 0

   context = Preliminary
   DISPLAY
      InitialState: $context {ContextLegend}
      Time
      numActiveEvents
   END

   // Main expression must evaluate to an integer representing the number of instances
    INITIALSTATE = 1

   // Consequent assignment expressions are evaluated globally  (event instance
   // context) when the first instances are created
   context = Consequent
   DISPLAY
      InitialState: $context {ContextLegend}
      EventId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
   END
ENDIS

// ------------------  RETURN TIME  ---------------------------------
// The ReturnTime property specifies the interval of time between
// successive instances of the event on the landscape.  This property
// represents the time-step for the event, which may be constant or
// variable (e.g. drawn from a probability distribution). The time
// units are defined in the dynamic model file (.sel file), but this
// only influences the SELES user interface. If not specified, by
// default the event will occur at time zero (start of simulation) and 
// will not recur.
// ------------------------------------------------------------------
RETURNTIME
   // Preliminary expressions are evaluated globally (event instance
   // context) when the event instance is created (i.e. at the time the instance
   // is scheduled) prior to evaluating the main expression.

   // NOTE: by default, initial value for EVENT variables is taken from the creating event

   // Increment number of active events for new event
   IF Time < MaxInstances 
      numActiveEvents = numActiveEvents + 1
   END

   context = Preliminary
   DISPLAY
      ReturnTime: $context {ContextLegend}
      EventId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
   END

   // Main expression must evaluate to numeric value representing time units
   RETURNTIME = IF (EventId EQ 1) THEN 1 
                ELSE IF EventId <= MaxInstances THEN 10 
                ELSE 0

   // Consequent expressions are evaluated globally  (event instance
   // context) prior to the event initiating.  This is the first thing to be done 
   // when the event is taken off the queue.
   context = Consequent
   DISPLAY
      ReturnTime: $context {ContextLegend}
      EventId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
   END
ENDRT

// ----------------------  END EVENT --------------------------------
// The EndEvent property is processd when an event instance terminates.
// This occurs when there are no more active clusters in the instance,
// which may be in the same or future time from when the instance was
// initiated. The main expression should always be TRUE (not used at
// present), and only preliminary expressions should be used. These will
// be assessed immediately before the instance terminates.
// -------------------------------------------------------------------
ENDEVENT
   // Preliminary expressions are evaluated globally (event instance
   // context) just prior to terminating the event instance.

   // decrement number of known active event instances
   numActiveEvents = numActiveEvents  - 1

   ENDEVENT = TRUE
ENDEE

// ----------------------  EVENT LOCATION  ---------------------------
// The EventLocation property specifies the set of cells in which the
// event can potentially initiate.  This property can be used to
// restrict the occurrence of an event to a particular spatial region,
// or to a particular type of landscape element.
// If not specified, by default is every cell in the whole map.
// -------------------------------------------------------------------
EVENTLOCATION
   // Preliminary expressions are evaluated globally (event instance
   // context) prior to evaluating the main expression.
   context = Preliminary
   DISPLAY
      EventLocation: $context {ContextLegend}
      EventId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
   END

   // Main expression must be a region
   EVENTLOCATION = REGION RECT(FLOOR(0.25*NUMCOLS), 0, CEIL(0.75*NUMCOLS), NUMROWS-1)
                     DECISION TRUE // some decision

   // Consequent expressions are evaluated in each cell    //
   // selected by EventLocation as a potential initiation site, prior //
   // to evaluating NumClusters and ProbInit.                       //
   EventLocation = MIN(EventId, MaxInstances)

   context = Consequent
   DISPLAY
      EventLocation: $context {ContextLegend}
      EventId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      Row: ROW(Location)
      Col: COL(Location)
   END
ENDEL


// ------------------------- NUM CLUSTERS -----------------------------
// The NumClusters property specifies the number of cells in which the 
// current event instance will  initiate.  This property "selects" a sub-set
// of the cells identified as initiating cells by ProbInit.
// This property works in conjucntion with ProbInit (as described below),
// see the SELES programmers manual for a complete description.
// If not specified, by default the number of initiating cells will be
// detemined soley by ProbInit.
// ---------------------------------------------------------------------
NUMCLUSTERS
   // Preliminary expressions are evaluated globally
   // prior to evaluating NumClusters
   context = Preliminary
   DISPLAY
      NumClusters: $context {ContextLegend}
      EventId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
   END


   // Main expression must evaluate to numeric value
   NUMCLUSTERS = 2

   // Consequent expressions are evaluated in each cell
   // in which the event actually initiates, prior to evaluating the
   // consequence assignments of ProbInit and performing Transitions.
   numActiveClusters = numActiveClusters + 1
   totalActiveClusters = totalActiveClusters + 1
   clusterId = nextClusterId
   nextClusterId = nextClusterId + 1

   context = Consequent
   DISPLAY
      NumClusters: $context {ContextLegend}
      EventId
      clusterId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
   END
ENDNC


// ----------------------  END CLUSTER --------------------------------
// The EndCluster property is processd when a cluster terminates.
// This occurs when there are no more active cells in the cluster,
// which may be in the same or future time from when the cluster was
// initiated. The main expression should always be TRUE (not used at
// present), and only preliminary expressions should be used. These will
// be assessed immediately before the cluster terminates.
// -------------------------------------------------------------------
ENDCLUSTER
   // Preliminary expressions are evaluated globally (event instance
   // context) just prior to terminating the event instance.

   // decrement number of known active clusters for event instance
   numActiveClusters = numActiveClusters - 1
   totalActiveClusters = totalActiveClusters - 1

   ENDCLUSTER = TRUE
ENDEC

// -----------------------  PROB INIT  -------------------------------
// The ProbInit property specifies the probability that the event
// initiates in a particular cell. If NumClusters is not specified,
// ProbInit yields an absolute probability for each cell, and the
// actual initiating cells are selected using this probability.
// If NumClusters is specified, ProbInit yields a relative
// probability that influences which cells are selected for initiation.
// This property provides an opportunity to use the existing landscape
// pattern (spatial raster layers) to influence  the spatial behaviour
// of the process
// If not specified, by default each cell has an equal probability of
// initiation (i.e., ProbInit = 1; or the landscape is homogeneous
// with respect to the occurrence of the event).
// -------------------------------------------------------------------
PROBINIT
   // Preliminary expressions are evaluated in each cell
   // defined by the EventLocation, prior to evaluating ProbInit.
   context = Preliminary
   DISPLAY
      ProbInit: $context {ContextLegend}
      EventId
      Time
      numActiveEvents
      Row: ROW(Location)
      Col: COL(Location)
   END

   // Main expression must evaluate to numeric value.
   PROBINIT = (NUMCOLS - COL(Location))/NUMCOLS // tend to start towards "left"

   // Consequent expressions are evaluated in each cell
   // in which the event actually initiates, prior to transitions.
   numActiveCells = 1
   totalActiveCells = totalActiveCells + 1
   cellId = nextCellId
   nextCellId = nextCellId + 1
   InitLoc = MIN(EventId, MaxInstances)

   context = Consequent
   DISPLAY
      ProbInit: $context {ContextLegend}
      EventId
      clusterId
      cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
   END
ENDPI


// ---------------------------- TRANSITIONS ------------------------------
// The transitions property is used to specify whether the event actually
// "occurs" in the cell.  This property allows a subtle difference to be
// made between the initiation of an event in a cell and its establishment.
// The main expression is a logical value used to determine whether or not
// a transition will be allowed to occur for the event that initiated in
// the cell. Although state changes can happen in any property, the
// consequent assignments for this propery is the logical place to specify
// formal state transitions for the event.
// This property also determines whether or not the event will spread from
// the cell because only events that "occur" (i.e., are allowed to make a
// transition) are allowed to spread.
// If not specified, state transitions the event "occurs" in all cells that
// are initiated.
// -----------------------------------------------------------------------
TRANSITIONS
   // Preliminary expressions are evaluated in cells in which the
   // event initiated, prior to determining if initiation causes a transition.
   occur = (OccurredLoc < EventId) AND (UNIFORM(0,1) < 0.6)   // x% chance of occurrence

   IF (occur EQ FALSE) // i.e. if the active cell terminates here (due to "not occurring")
      numActiveCells = numActiveCells - 1
      totalActiveCells = totalActiveCells - 1
   END

   context = Preliminary
   DISPLAY
      Trans: $context {ContextLegend}
      EventId
      clusterId
      cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
   END

   // Main expression must evaluate to a logical value, True (1) or False (0).
   TRANSITIONS = occur

   // Consequent expressions are evaluated in each cell in which
   // the event actually occurs.  This is normally where formal state
   // transitions for the model are specified (i.e., the event occurred, so
   // here we specify what the event acctually does to the model state.
   OccurredLoc = MIN(EventId, MaxInstances)

   context = Consequent
   DISPLAY
      Trans: $context {ContextLegend}
      EventId
      clusterId
      cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
   END
ENDTR


// -----------------------  SPREADING  -------------------------------
// Conceptually, spreading occurs at the cell level.  A transition has
// just occurred in the current cell, which we call the source cell for
// the spread operation.  The event spreads from the source cell to a
// set of target cells defined by the spread properties.
// -------------------------------------------------------------------


// -----------------------  SPREAD TIMESTEP  -------------------------
// The SpreadTimeStep property specifies the interval of time required
// for an event to spread from the current cells to its neighbors.
// It is analogous to the ReturnTime property, except that it controls
// the rate of an event instance, as opposed to the rate of inter-event
// occurence.  If not specified, by default the event will not spread.
// -------------------------------------------------------------------
SPREADTIME
   // Preliminary expressions are evaluated in the current
   // (source) cell immediately after a transition occurs and prior to
   // evaluating SpreadTimestep.
   context = Preliminary
   DISPLAY
      SpreadTimeStep: $context {ContextLegend}
      EventId
      clusterId
      cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
   END

   // Main expression must evaluate to numeric value.
   SPREADTIME = 2

   // Consequent expressions are evaluated in the source cell when it has FINISHED spreading.
   // This is the last thing a spreading cell does after an event occurs in it.
   numActiveCells = numActiveCells - 1
   totalActiveCells = totalActiveCells - 1

   context = Consequent
   DISPLAY
      SpreadTimeStep: $context {ContextLegend}
      EventId
      clusterId
      cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
   END
ENDST


// ---------------------  SPREAD LOCATION  --------------------------
// The SpreadLocation property specifies the set of cells to which an
// event can potentially spread from the current cell.  This property
// is analogous to the EventLocation, except that it controls the
// the region to which an event may spread. If not specified,
// by default the event will spread only to its 4 cardinal neighbors.
// ------------------------------------------------------------------
SPREADLOCATION
   // Preliminary expressions are evaluated in the source cell
   // prior to evaluating SpreadLocation.
   context = Preliminary
   DISPLAY
      SpreadLoc: $context {ContextLegend}
      EventId
      clusterId
      cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
   END

   // Main expression must evaluate to a region.
   SPREADLOCATION = REGION CENTRED(1,1, WRAPPED)

   // Consequent expressions are evaluated in each cell
   // selected by SpreadLocation as a potential target cell, prior
   // to evaluating SpreadOpenings and SpreadProbInit.
   RecipientLoc = MIN(EventId, MaxInstances)

   context = Consequent
   DISPLAY
      SpreadLoc: $context {ContextLegend}
      EventId
      clusterId
      SrcCellId: SOURCE cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
   END
ENDSL


// --------------------------  NUMBER of spread RECIPIENTS ----------
// The NumRecipients property specifies the number of cells an event
// should spread to.  This property is analogous to NumClusters,
// except that it only controls the spreading of events.  It works in
// conjunction with SpreadProb (see SELES programmers manual).
// If not specified, by default the number of cells to spread to will
// be detemined solely by SpreadProb.
// -------------------------------------------------------------------
NUMRECIPIENTS
   // Preliminary expressions are evaluated in the source
   // cell prior to evaluating SpreadOpenings.
   context = Preliminary
   DISPLAY
      NumRecipients: $context {ContextLegend}
      EventId
      clusterId
      cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
   END

   // Main expression must evaluate to numeric value.
   NUMRECIPIENTS = ROUND(UNIFORM(0,3))

   // Consequent expressions are evaluated in each target cell
   // (cells to which the event actually spreads), prior to the consequent
   // assignments for SpreadProbInit and performing transitions.
   RecipientLoc = MIN(EventId, MaxInstances)

   context = Consequent
   DISPLAY
      NumRecipients: $context {ContextLegend}
      EventId
      clusterId
      cellId
      SrcCellId: SOURCE cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
      SOURCERow: ROW(SOURCE Location)
      SOURCECol: COL(SOURCE Location)
   END
ENDNR


// ----------------- SPREAD PROB  -----------------------------------
// The SpreadProb property specifies the probability that an event
// spreads to a neighbouring cell. This property is analogous to
// ProbInit, except that it controls the probability of spreading as
// opposed to the probabilty of initiating.  It works in conjunction
// with NumRecipients in the same way as ProbInit and NumClusters
// work together.  This property provides an opportunity to use the
// existing landscape pattern (spatial raster layers) to influence the
// spreading behaviour of the process.
// If not specified, by default each cell in the SpreadLocation has an
// equal probability of being spread to (i.e., SpreadProb = 1;).
// -------------------------------------------------------------------
SPREADPROB
   // Preliminary expressions are evaluated in each potential target cell 
   // defined by the SpreadLocation, prior to evaluating SpreadProb.
   context = Preliminary
   DISPLAY
      SpreadProb: $context {ContextLegend}
      EventId
      clusterId
      SrcCellId: SOURCE cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
      SOURCERow: ROW(SOURCE Location)
      SOURCECol: COL(SOURCE Location)
   END

   // Main expression must evaluate to numeric value.
   SPREADPROB = (ROW(Location)+1)/NUMROWS   // tend to spread "up"

   // Consequent expressions are evaluated in each target cell, prior to transitions.
   numActiveCells = numActiveCells + 1
   totalActiveCells = totalActiveCells + 1
   cellId = nextCellId
   nextCellId = nextCellId + 1
   SpreadLoc = MIN(EventId, MaxInstances)

   context = Consequent
   DISPLAY
      SpreadProb: $context {ContextLegend}
      EventId
      clusterId
      cellId
      SrcCellId: SOURCE cellId
      Time
      numActiveEvents
      numClustersInEvent: numActiveClusters
      numCellsInCluster: numActiveCells
      Row: ROW(Location)
      Col: COL(Location)
      SOURCERow: ROW(SOURCE Location)
      SOURCECol: COL(SOURCE Location)
   END
ENDSP

