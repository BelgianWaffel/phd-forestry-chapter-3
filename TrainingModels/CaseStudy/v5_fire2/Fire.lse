// Simple top-own fire event (version 2) for the case study model
LSEVENT: Fire

DEFINITIONS
   GLOBAL CONSTANT: HaPerCell, MaxTimeSinceDisturbance

   // Parameters
   GLOBAL VARIABLE: BaseTimestep // Base Time step (in years)
   GLOBAL VARIABLE: MeanFiresPerYear, MeanFireSize 

   // Static and input layers
   LAYER: StudyArea
   LAYER: Elevation, Aspect     // elevation in metres; aspect 0 to 360 + flat (361)

   LAYER: Spp1
//   GLOBAL CONSTANT: PL // pine in lead species layer

   // Dynamic layers
   LAYER: StandAge, Burnt   // Show areas that were recently burned

   // Tracking/output global variable
   GLOBAL VARIABLE: AreaBurned

   CLUSTER VARIABLE: FireExtent
ENDDEF


// Run after succession (schedule the first instance at time 0.5, then each time step thereafter)
RETURNTIME
   RETURNTIME = IF Time EQ 0 THEN 0.5 ELSE BaseTimestep

   // Update time since disturbance information
   // Need to do this here, since Burnt may include non-forested cells
   OVER REGION WHOLE MAP
      DECISION Burnt > 0
      Burnt = MAX(0,Burnt - BaseTimestep)
   END

   // Reset area burned
   AreaBurned = 0
ENDRT


// Only allow ignitions in forested cells (the "STATIC" keyword means: compute region once on startup and should only be use when the decision is static)
EVENTLOCATION
   STATIC REGION WHOLE MAP
      DECISION (StudyArea > 0) AND (Spp1 > 0)
ENDEL


// Draw the number of clusters from an exponential distribution based on the MeanFirePerYear parameter (multiplied by the time step)
NUMCLUSTERS = FLOOR(NEGEXP(MeanFiresPerYear * BaseTimestep))


PROBINIT
   // Ignition likelihoo depends on aspect
   pAspect = 0.5*(SIN(Aspect-45) + 1)
   PROBINIT = pAspect

   // For each cluster (opening), select an opening size from a negative exponential distribution
   FireExtent = ROUND(NEGEXP(MeanFireSize))
ENDPI



TRANSITIONS
   // Continue if there is still extent to be burned (top-down) AND if the stand didn't already burn during time step
   TRANSITIONS = (FireExtent > 0) AND (Burnt < MaxTimeSinceDisturbance)
  

   IF Spp1 > 0
      // Decrement the number of cells remaining to burn for this opening
      // Only do this for forested cells. NonForested cells will just pass on the fire
      FireExtent = FireExtent - HaPerCell
      AreaBurned = AreaBurned + HaPerCell

      // Set the stand age to 0
      StandAge = 0
   END

   // Set the Burnt layer to MaxTimeSinceDisturbance (reverse of time since fire - sometimes more convenient for visualizing)
   Burnt = MaxTimeSinceDisturbance
ENDTR


// Spread timestep: time is irrelevant for this empirical model
// (a time step of 0 will apply an equal step during spread of the cluster, but won't consume time (so the cluster will definitely finish before the next time step)
// Functionally equivalent here to the 0.0001 used in the first version
SPREADTIME = 0


// Spread to the eight neighbours (min of 1 cell and max of 1.5 cells)
SPREADLOCATION
   REGION CENTRED(1, 1.5)
      DECISION (StudyArea > 0)
ENDSL


// Mid-Complex shapes. This is the number of neighbours to spread to from a burning cell. 
// Lower mean gives more complex shapes.
// The clamp function forces the result to be between 1 and 8
NUMRECIPIENTS = CLAMP(NORMAL(2,1), 1, 8)


// Prefer to spread to neighbours with southwest aspects and uphill
SPREADPROB
   pElevation = IF Elevation > (SOURCE Elevation) THEN 5
                ELSE IF Elevation < (SOURCE Elevation) THEN 0.5
                ELSE 1

   pAspect = 0.5*(SIN(Aspect-45) + 1)

   SPREADPROB = (pElevation^0.5) * (pAspect^0.5)
ENDSP
